/**
 * Daniel Hill
 * 29/11/2016
 * This is the Sudoku for work sheet 5. Exercise 4
 */
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

/**
* This is the SudokuInteractive class which inherits from the super class Sudoku. The class is instantiated for use within the program and super is used to set the array.
*/
public class SudokuInteractive  {
	//private String file;
	
	public SudokuInteractive(int[][] array, String file) {
		//super(array);
		//this.file = file;
		// TODO Auto-generated constructor stub
	}
	
	/**
	 * This is the play method which is a void type and allows the user to play Sudoku. it throws IllegalArgumentException and IOException.
	 * @param String File
	 */	
	
	public static void play(String File) throws IllegalArgumentException, IOException {

//sets bigArray which is the array we will alter and return as the final sudoku		
int [][] bigArray = new int [9][9];
int [][] correctArray =  {{1, 2, 3, 4, 5 , 6, 7 , 8 ,9 },
		{4 , 5 , 6 , 7 , 8 , 9 , 1 , 2 , 3 },
		{7 , 8 , 9 , 1 , 2 , 3 , 4 , 5 , 6}, 
		{ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 1 }, 
		{ 5 , 6 , 7 , 8 , 9 , 1 , 2 , 3 , 4 }, 
		{ 8 , 9 , 1 , 2 , 3 , 4 , 5 , 6 , 7 }, 
		{ 3 , 4 , 5 , 6 , 7 , 8 , 9 , 1 , 2 }, 
		{ 6 ,  7 , 8 , 9 , 1 , 2 , 3 , 4 , 5}, 
		{ 9 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8}}; 
		
//this is the reader which reads in a file and converts it to a sudoku format 		
		try{ 
			BufferedReader br = new BufferedReader(new FileReader(File)); 
			for(int i = 0; i < 9; i++){
			String reader = br.readLine();
			reader = reader.replaceAll(" ", "0");
			String [] array;
			array = reader.split("");
			
			if (array.length != 9){
				br.close();
				// new InputMismatchException();   	
			}
			
			
			for (int j = 0; j < 9; j++){
				
				bigArray[i][j] = Integer.parseInt(array[j]);
			}
			
			
		    }
			br.close();
		}
		
			 catch (IOException e){
			 System.out.println("File not found");
		 }
		Sudoku a1 = new Sudoku (bigArray);
			
		//int n;
		//String[] values = new String [4];
		 
	    Scanner input = new Scanner(System.in);
	    Scanner input2 = new Scanner(System.in);
	    System.out.println("Input the value for sudoku:"); 
	    
	    String nin = input.next(); 
	    if (nin.matches("([A-Z])([1-9])(:)([1-9]")){ 
	    	System.out.println("Yay");} 
	}
	    
	 
	    /*
	    while ((n = input.next()) == ([A-Z])([1-9])(:)([1-9])) {
	    	System.out.println("Which square?");
	    	String square = input.next();
	    	//exception needed if n > 9 for all inputs
	    	

	    	if (square.length() == 2){
	    		values = square.split("");
	    		int column = Integer.parseInt(values[0]); 
	    		int row = Integer.parseInt(values[1]);
	    		System.out.println("Integer array is " + Integer.parseInt(values[0]) + " and " + Integer.parseInt(values[1]));
	    	
	      bigArray[column][row] = n;
	      String str = Integer.toString(n);
	      values[0] = str;
	      
	      
	      //System.out.println(bigArray[0][0]);
	      System.out.print(Arrays.deepToString(bigArray));
	      System.out.println("You entered " + n);
	      System.out.println("Input an integer");
	    	}
	    	else {System.out.println("You are out of loop - Enter two numbers which correspond to the column and the row");
	    		break;};
	    		
	    		if(bigArray[0][0] == correctArray[0][0]){
	        		System.out.println("*************************Well done you completed the Sudoku******************************");
	        		break;
	        	} 		
	    }
	 
	    System.out.println("*************************Game Over*************************");
	}			
	*/

	public static void main(String[] args) throws IllegalArgumentException, IOException {
		play("./src/badsudoku.txt");
		//System.out.print(Arrays.deepToString(bigArray));
	    
	
	}
}

